{"version":3,"file":"static/js/516.3cabac6e.chunk.js","mappings":"kNAKaA,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAErBC,GAAWC,EAAAA,EAAAA,MAEPC,EAAWH,EAAOI,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAb,OAE5B,yBACY,SAAC,KAAD,CAAOC,GAAE,kBAAaH,GAAMI,MAAQ,CAACC,KAAMT,GAA3C,SAAwDK,GAASC,KADpEF,GAAKM,EAAAA,EAAAA,MAFc,IAO5B,OAAO,wBAAKR,GACf,C,yKCZYS,EAAS,WACpB,OAA0BC,EAAAA,EAAAA,UAAS,CACjCb,OAAQ,GACRc,SAAS,EACTC,MAAO,OAHT,eAAON,EAAP,KAAcO,EAAd,MAMAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBF,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBL,SAAS,EACTC,MAAO,MAHS,IAFF,UAQKK,EAAAA,EAAAA,MARL,OAQVC,EARU,OAShBL,GAAS,SAAAG,GACP,OAAO,kBACFA,GADL,IAEEnB,QAAO,OAAKqB,IAGf,IAfe,gDAiBhBL,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBJ,MAAK,MAFW,IAjBF,yBAsBhBC,GAAS,SAAAG,GACP,OAAO,kBACFA,GADL,IAEEL,SAAS,GAEZ,IA3Be,4EAAH,qDA+BjBI,GACD,GAAE,CAACF,IAEJ,IAAQhB,EAA2BS,EAA3BT,OAAQc,EAAmBL,EAAnBK,QAASC,EAAUN,EAAVM,MAIzB,OACE,2BACGf,EAAOsB,OAAS,IAAK,SAACvB,EAAA,EAAD,CAAWC,OAAQA,IACxCc,IAAW,yCACXC,IAAS,kDAGf,EC5CD,EAXiB,WAGjB,OACA,4BACA,6CACA,SAACH,EAAD,MAGC,C,wLCRKW,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,OAAQ,MAKCR,EAAiB,mCAAG,2GAAOS,EAAP,+BAAc,EAAd,SACRN,EAASO,IAAT,uBAAqC,CAC1DJ,OAAQ,CACNG,KAAAA,KAH2B,uBACvBE,EADuB,EACvBA,KADuB,kBAOxBA,EAAKC,SAPmB,2CAAH,qDAWjBC,EAAc,mCAAG,WAAM5B,GAAN,yFACLkB,EAASO,IAAT,iBAAuBzB,IADlB,uBACpB0B,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdG,EAAY,mCAAG,WAAMC,GAAN,yFACHZ,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNS,MAAAA,KAHsB,uBAClBJ,EADkB,EAClBA,KADkB,kBAOnBA,EAAKC,SAPc,2CAAH,sDAUZI,EAAO,mCAAG,WAAM/B,GAAN,yFACEkB,EAASO,IAAT,iBAAuBzB,EAAvB,aADF,uBACb0B,EADa,EACbA,KADa,kBAGdA,EAAKM,MAHS,2CAAH,sDAMPC,EAAU,mCAAG,WAAMjC,GAAN,yFACDkB,EAASO,IAAT,iBAAuBzB,EAAvB,aADC,uBAChB0B,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,wDC7ChB,IAkBIrB,EAAS,eAAC4B,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACtC,EAAIuC,GAWvD,OAREvC,IAFFuC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/MovieList/MovieList.jsx","components/Movies/Movies.jsx","pages/HomePage/HomePage.jsx","services/api.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Link} from \"react-router-dom\";\nimport { nanoid } from 'nanoid';\nimport { useLocation } from 'react-router-dom';\n\n\nexport const MovieList = ({movies}) => {\n\nconst location = useLocation();\n\n    const elements = movies.map(({id, title, name}) => \n    \n    <li key={id + nanoid()}>\n                <Link  to={`/movies/${id}`} state={ {from: location} }>{title || name}</Link>\n        </li>);\n\n\n    return <ul>{elements}</ul>\n}\n\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\n\nimport { getTrendingMovies } from '../../services/api';\n\nexport const Movies = () => {\n  const [state, setState] = useState({\n    movies: [],\n    loading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getTrendingMovies();\n        setState(prevState => {\n          return {\n            ...prevState,\n            movies: [...result],\n            //movies: [...prevState.movies, ...result],\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchMovies();\n  }, [setState]);\n\n  const { movies, loading, error } = state;\n\n  //console.log(movies, 'from movies');\n\n  return (\n    <div>\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {loading && <p>...load posts</p>}\n      {error && <p>...Posts load failed</p>}\n    </div>\n  );\n};\n","\nimport {Movies} from '../../components/Movies/Movies';\n\nconst HomePage = () => {\n\n\nreturn(\n<div>\n<h2> Trending today</h2>\n<Movies/>\n</div>\n)\n}\n\nexport default HomePage;","import axios from 'axios';\n\n// const api_key = \"42198471976a286e57d85c87e47247c5\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '42198471976a286e57d85c87e47247c5',\n    _limit: 20,\n  },\n});\n//trending/all/day?api_key=<<api_key>>\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await instance.get(`/trending/movie/day?`, {\n    params: {\n      page,\n    },\n  });\n  \n  return data.results;\n};\n\n\nexport const getSingleMovie = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  //console.log(data.cast);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["MovieList","movies","location","useLocation","elements","map","id","title","name","to","state","from","nanoid","Movies","useState","loading","error","setState","useEffect","fetchMovies","prevState","getTrendingMovies","result","length","instance","axios","baseURL","params","api_key","_limit","page","get","data","results","getSingleMovie","searchMovies","query","getCast","cast","getReviews","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}